ggplot(data2,aes( education_level,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(gender_of_respondent ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes( marital_status ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(relationship_with_head  ,fill = bank_account))+
geom_bar(stat = "count")
str(data2)
dim(test)
#dim(data2)
#data2 = data2[,-3]
dim(data2)
head(data2)
data2 = data2[,-3]
dim(data2)
head(data2)
require(xgboost)
require(Matrix)
require(data.table)
if(!require('vcd'))install.packages('vcd)
sparse_matrix<-sparse.model.matrix(bank_account~.,data = data2)[,-1]
# and transform them in
head(sparse_matrix)
train<-sparse_matrix[1:23524,]
train<-sparse_matrix[1:23524,]
train<-sparse_matrix[1:23524,]
train<-sparse_matrix[1:23524,]
head(train)
output_vector_train = data2[1:23524,bank_account]=="Yes"
output_vector_train = data2[1:23524,bank_account]=="Yes"
output_vector_train = data2[1:23524,3]=="Yes"
head(output_vector_train)
bst<-xgboost(data = sparse_matrix,label = output_vector_train,max_depth =4,eta = 1,nthread = 2,nrounds = 10,objective = "binary:logistic")
bst<-xgboost(data = sparse_matrix,label = output_vector_train,max_depth =4,eta = 1,nthread = 2,nrounds = 10,objective = "binary:logistic")
summary(bst)
test<-sparse_matrix[23525:33610,]
test<-sparse_matrix[23525:33610,]
test<-sparse_matrix[23525:33610,]
require(xgboost)
require(Matrix)
require(data.table)
if(!require('vcd'))install.packages('vcd)
data2<-data.table(data2,keep.rownames = F)
head(data2)
tail(data2)
dim(train)
test<-sparse_matrix[23525:33610,]
test<-sparse_matrix[23525:33610,]
test<-sparse_matrix[23525:33610,]
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
#join both
data2<-rbind(train,test)
data2
tail(data2)
colSums(is.na(data2))
library(dplyr)
glimpse(data2)
hist(data2$household_size)
summary(data2)
#check duplicates
anyDuplicated(data2)
hist(data2$age_of_respondent)
library(ggplot2)
ggplot(data2,aes(x = bank_account,y = log(age_of_respondent)))+
geom_col()
ggplot(data2,aes(bank_account))+
geom_bar(stat = "count")
#check the country
ggplot(data2,aes(country,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(y= age_of_respondent,x = cellphone_access,fill = bank_account))+
geom_col()
ggplot(data2,aes(location_type,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(job_type,fill = bank_account))+
geom_bar(stat = "count")
#theme(element_text(axis.title.x = 90))
ggplot(data2,aes( education_level,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(gender_of_respondent ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes( marital_status ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(relationship_with_head  ,fill = bank_account))+
geom_bar(stat = "count")
str(data2)
dim(test)
data2 = data2[,-3]
dim(data2)
head(data2)
require(xgboost)
require(Matrix)
require(data.table)
if(!require('vcd'))install.packages('vcd)
data2<-data.table(data2,keep.rownames = F)
head(data2)
tail(data2)
train2<-data2[1:23524,]
test2<-data2[23525:33610,]
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = train2)[,-1]
# and transform them in
head(sparse_matrix1)
output_vector_train = train2[,bank_account]=="Yes"
```
```{r}
head(output_vector_train)
```
dim(train2)
head(sparse_matrix1)
output_vector_train = train2[,bank_account]=="Yes"
head(output_vector_train)
bst<-xgboost(data = sparse_matrix,label = output_vector_train,max_depth =4,eta = 1,nthread = 2,nrounds = 10,objective = "binary:logistic")
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
summary(bst)
str(test2)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
summary(bst)
str(test2)
test2$bank_account<-as.logical(test2$bank_account)
summary(bst)
str(test2)
test2$bank_account<-as.logical(test2$bank_account)
str(test2)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
str(test)
str(test2)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
test2$bank_account%>%
replace_na(0)
library(tidyverse)
test2$bank_account%>%
replace_na(0)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
library(tidyverse)
test2$bank_account%>%
replace_na(0,1)
library(tidyverse)
test2$bank_account%>%
replace_na(0)
test2$bank_account<-as.character(test2$bank_account)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
#test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
#join both
data2<-rbind(train,test)
data2
tail(data2)
colSums(is.na(data2))
library(dplyr)
glimpse(data2)
hist(data2$household_size)
summary(data2)
#check duplicates
anyDuplicated(data2)
hist(data2$age_of_respondent)
library(ggplot2)
ggplot(data2,aes(x = bank_account,y = log(age_of_respondent)))+
geom_col()
ggplot(data2,aes(bank_account))+
geom_bar(stat = "count")
#check the country
ggplot(data2,aes(country,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(y= age_of_respondent,x = cellphone_access,fill = bank_account))+
geom_col()
ggplot(data2,aes(location_type,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(job_type,fill = bank_account))+
geom_bar(stat = "count")
#theme(element_text(axis.title.x = 90))
ggplot(data2,aes( education_level,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(gender_of_respondent ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes( marital_status ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(relationship_with_head  ,fill = bank_account))+
geom_bar(stat = "count")
str(data2)
dim(test)
data2 = data2[,-3]
dim(data2)
head(data2)
sparse_matrix<-sparse.model.matrix(bank_account~.,data = data2)[,-1]
data2<-data.table(data2,keep.rownames = F)
head(data2)
tail(data2)
train2<-data2[1:23524,]
test2<-data2[23525:33610,]
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = train2)[,-1]
# and transform them in
head(sparse_matrix1)
dim(train2)
output_vector_train = train2[,bank_account]=="Yes"
head(output_vector_train)
bst<-xgboost(data = sparse_matrix,label = output_vector_train,max_depth =4,eta = 1,nthread = 2,nrounds = 10,objective = "binary:logistic")
head(output_vector_train)
dim(output_vector_train)
output_vector_train = train2[,bank_account]=="Yes"
output_vector_train = train2[,bank_account]=="Yes"
head(output_vector_train)
bst<-xgboost(data = sparse_matrix1,label = output_vector_train,max_depth =4,eta = 1,nthread = 2,nrounds = 10,objective = "binary:logistic")
summary(bst)
str(test2)
#test2$bank_account<-as.logical(test2$bank_account)
str(test2)
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
sparse_matrix2<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
predict(bst,sparse_matrix2)
test2$pred<-predict(bst,sparse_matrix2)
test$pred
test2$pred<-predict(bst,sparse_matrix2)
test2$pred<-as.numeric(test2$pred>0.5)
pred
tail(pred)
test2$pred<-predict(bst,sparse_matrix2)
test2$pred<-predict(bst,sparse_matrix2)
test2$pred
test2$pred<-ifelse(test$pred>0.5,1,0)
pred<-ifelse(pred>0.5,1,0)
head(pred)
tail(pred)
tail(pred)
knitr::opts_chunk$set(echo = TRUE)
predlo<-predict(bst,sparse_matrix2)
predq<-ifelse(predlo>0.56,1,0)
y_predq<-factor(predq,levels = c(0,1))
table(y_predq,data3te$diagnosis)
predlo<-predict(bst,sparse_matrix2)
predq<-ifelse(predlo>0.56,1,0)
y_predq<-factor(predq,levels = c(0,1))
head(y_predq)
predlo<-predict(bst,sparse_matrix2)
predq<-ifelse(predlo>0.56,1,0)
test2$y_predq<-factor(predq,levels = c(0,1))
head(y_predq)
tail(test2)
head(test2)
predlo<-predict(bst,sparse_matrix2)
predq<-ifelse(predlo>0.56,1,0)
#test2$y_predq<-factor(predq,levels = c(0,1))
head(predq)
predlo<-predict(bst,sparse_matrix2)
test$predq<-ifelse(predlo>0.56,1,0)
#test2$y_predq<-factor(predq,levels = c(0,1))
head(predq)
head(test2)
predlo<-predict(bst,sparse_matrix2)
test2$predq<-ifelse(predlo>0.56,1,0)
#test2$y_predq<-factor(predq,levels = c(0,1))
head(predq)
head(test2)
dim(test2$predq)
sample_n(test2)
library(tidyverse)
sample_n(test2)
library(tidyverse)
sample_n(3,test2)
chack<-paste(data2$uniqueid,data2$country,sep = " x ")
head(
chack,20
)
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
#test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
#join both
data2<-rbind(train,test)
data2
tail(data2)
chack<-paste(data2$uniqueid,data2$country,sep = " x ")
head(
chack,20
)
bank_account = test2$predq
sub<-cbind(chack,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
read.csv("SubmissionFile.csv",header = T)
sub<-cbind(chack,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
cot<-read.csv("SubmissionFile.csv",header = T)
view(cot)
uniqueid<-paste(data2$uniqueid,data2$country,sep = " x ")
head(
chack,20
)
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
cot<-read.csv("SubmissionFile.csv",header = T)
view(cot)
bank_account = test2$predq
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
cot<-read.csv("SubmissionFile.csv",header = T)
view(cot)
library(readxl)
dataset <- read_excel(SubmissionFile.csv)
View(dataset)
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
SubmissionFile.csv<-read.csv("SubmissionFile.csv",header = T)
view(cot)
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
SubmissionFile.csv<-read.csv("SubmissionFile.csv",header = T)
view(SubmissionFile.csv)
library(readr)
SubmissionFile <- read_csv("SubmissionFile.csv")
View(SubmissionFile)
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
#test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
uniqueid<-paste(test$uniqueid,test$country,sep = " x ")
head(
chack,20
)
bank_account = test2$predq
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
SubmissionFile.csv<-read.csv("SubmissionFile.csv",header = T)
view(SubmissionFile.csv)
library(readr)
SubmissionFile <- read_csv("SubmissionFile.csv")
View(SubmissionFile)
library(readxl)
dataset <- read_excel("SubmissionFile.csv")
View(dataset)
library(readr)
SubmissionFile <- read_csv("SubmissionFile.csv")
View(SubmissionFile)
read<-read.csv("SubmissionFile.csv")
dim(read)
str(read)
read<-read.csv("SubmissionFile.csv",stringsAsFactors = F)
dim(read)
str(read)
knitr::opts_chunk$set(echo = TRUE)
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
#test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
#join both
data2<-rbind(train,test)
data2
tail(data2)
colSums(is.na(data2))
library(dplyr)
glimpse(data2)
hist(data2$household_size)
summary(data2)
#check duplicates
anyDuplicated(data2)
hist(data2$age_of_respondent)
library(ggplot2)
ggplot(data2,aes(x = bank_account,y = log(age_of_respondent)))+
geom_col()
ggplot(data2,aes(bank_account))+
geom_bar(stat = "count")
#check the country
ggplot(data2,aes(country,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(y= age_of_respondent,x = cellphone_access,fill = bank_account))+
geom_col()
ggplot(data2,aes(location_type,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(job_type,fill = bank_account))+
geom_bar(stat = "count")
#theme(element_text(axis.title.x = 90))
ggplot(data2,aes( education_level,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(gender_of_respondent ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes( marital_status ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(relationship_with_head  ,fill = bank_account))+
geom_bar(stat = "count")
str(data2)
dim(test)
data2 = data2[,-3]
dim(data2)
head(data2)
sparse_matrix<-sparse.model.matrix(bank_account~.,data = data2)[,-1]
require(xgboost)
require(Matrix)
require(data.table)
if(!require('vcd'))install.packages('vcd)
data2<-data.table(data2,keep.rownames = F)
head(data2)
tail(data2)
train2<-data2[1:23524,]
test2<-data2[23525:33610,]
sparse_matrix1<-sparse.model.matrix(bank_account~.,data = train2)[,-1]
# and transform them in
head(sparse_matrix1)
dim(train2)
output_vector_train = train2[,bank_account]=="Yes"
head(output_vector_train)
head(output_vector_train)
dim(output_vector_train)
summary(bst)
str(test2)
#test2$bank_account<-as.logical(test2$bank_account)
str(test2)
sparse_matrix2<-sparse.model.matrix(bank_account~.,data = test2)[,-1]
test2$pred<-predict(bst,sparse_matrix2)
test2$pred
predlo<-predict(bst,sparse_matrix2)
test2$predq<-ifelse(predlo>0.56,1,0)
#test2$y_predq<-factor(predq,levels = c(0,1))
head(predq)
head(test2)
test2<-cbind(test2,data2$uniqueid[])
library(tidyverse)
sample_n(3,test2)
uniqueid<-paste(test$uniqueid,test$country,sep = " x ")
head(
chack,20
)
bank_account = test2$predq
sub<-cbind(uniqueid,bank_account)
write.csv(sub,file = "SubmissionFile.csv",row.names = F)
SubmissionFile.csv<-read.csv("SubmissionFile.csv",header = T)
view(SubmissionFile.csv)
train2<-data2[1:23524,-3]
test2<-data2[23525:33610,-3]
dtrain<-xgb.DMatrix(as.matrix(train2))
setwd("D:/codebase/malawi zindi")
knitr::opts_chunk$set(echo = TRUE)
dtrain<-xgb.DMatrix(as.matrix(train2))
knitr::opts_chunk$set(echo = TRUE)
test<-read.csv("Test_v2.csv",stringsAsFactors = F,header = T)
train<-read.csv("Train_v2 (1).csv",stringsAsFactors = F,header = T)
#test$bank_account<-NA
dim(train)
dim(test)
head(train,20)
head(test)
str(train)
str(test)
#join both
data2<-rbind(train,test)
data2
tail(data2)
colSums(is.na(data2))
library(dplyr)
glimpse(data2)
hist(data2$household_size)
summary(data2)
#check duplicates
anyDuplicated(data2)
hist(data2$age_of_respondent)
library(ggplot2)
ggplot(data2,aes(x = bank_account,y = log(age_of_respondent)))+
geom_col()
ggplot(data2,aes(bank_account))+
geom_bar(stat = "count")
#check the country
ggplot(data2,aes(country,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(y= age_of_respondent,x = cellphone_access,fill = bank_account))+
geom_col()
ggplot(data2,aes(location_type,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(job_type,fill = bank_account))+
geom_bar(stat = "count")
#theme(element_text(axis.title.x = 90))
ggplot(data2,aes( education_level,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(gender_of_respondent ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes( marital_status ,fill = bank_account))+
geom_bar(stat = "count")
ggplot(data2,aes(relationship_with_head  ,fill = bank_account))+
geom_bar(stat = "count")
str(data2)
dim(test)
data2 = data2[,-3]
dim(data2)
head(data2)
sparse_matrix<-sparse.model.matrix(bank_account~.,data = data2)[,-1]
